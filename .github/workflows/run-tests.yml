# .github/workflows/run-tests.yml
name: "Conditional Test Suite"

on:
  push:
    # (Optional) specify branches if needed, e.g., main:
    # branches: [ main ]

jobs:
  run-tests:
    # Only run this job if commit message contains one of the trigger phrases
    if: >-
      contains(github.event.head_commit.message, '[run-tests]')
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - name: Check out repository
        uses: actions/checkout@v3

      # (Optional) Set up any dependencies (e.g. install docker-compose if needed)
      - name: Ensure Docker Compose V2
        run: |
          echo "Ensuring Docker Compose V2 (docker compose) is available"
          if ! docker compose version &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y docker-compose-plugin
          fi
          if [ -f "./requirements.txt" ]; then
            python3 -m venv "./migrator_venv"
            source "./migrator_venv/bin/activate"
            pip install --upgrade pip
            pip install -r "./requirements.txt"
          fi

      # - name: Add FreeTDS for Sybase ASE/MS SQL
      #   if: |
      #     contains(github.event.head_commit.message, '[sybase_ase]') ||
      #     contains(github.event.head_commit.message, '[mssql]') ||
      #     contains(github.event.head_commit.message, '[all]')
      #   run: |
      #     echo "Adding FreeTDS for Sybase ASE"
      #     sudo apt-get update
      #     sudo apt-get install -y freetds-bin freetds-dev freetds-common
      #     sudo apt-get install -y unixodbc unixodbc-common unixodbc-dev
      #     odbcinst -j

      # Configure error-handling mode based on commit message
      - name: Configure error mode = exit on first error
        # if: contains(github.event.head_commit.message, 'run tests, on error exit')
        run: echo "MODE=exit" >> $GITHUB_ENV

      # - name: Configure error mode = continue on errors
      #   if: contains(github.event.head_commit.message, 'run tests, on error continue')
      #   run: echo "MODE=continue" >> $GITHUB_ENV

      # Run all tests in the tests directory, each in its own subdirectory
      - name: Run Oracle tests
        if: contains(github.event.head_commit.message, '[oracle]') || contains(github.event.head_commit.message, '[all]')
        run: |
          echo "Oracle tests are not implemented yet"

      - name: Run Informix tests
        if: contains(github.event.head_commit.message, '[informix]') || contains(github.event.head_commit.message, '[all]')
        run: |
          dir="informix"
          set -e
          homedir=$(pwd)
          cd "$homedir/tests/$dir"
          echo "Running tests in $dir"
          bash "./run_full_test.sh"
          if [ "$MODE" = "exit" ] && [ $? -ne 0 ]; then
            echo "Test failed in $dir, exiting."
            exit 1
          fi
          echo "Test completed in $dir"
          cd $homedir

      - name: Upload test results from Informix tests
        if: contains(github.event.head_commit.message, '[informix]') || contains(github.event.head_commit.message, '[all]')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}/${{ env.ARTIFACT_NAME }}
          retention-days: 7
          overwrite: true
          if-no-files-found: warn

      - name: Unset artifact environment variables after Informix tests
        if: contains(github.event.head_commit.message, '[informix]') || contains(github.event.head_commit.message, '[all]')
        run: |
          unset ARTIFACT_NAME
          unset ARTIFACT_PATH

      - name: Run PostgreSQL tests
        if: contains(github.event.head_commit.message, '[postgresql]') || contains(github.event.head_commit.message, '[all]')
        run: |
          dir="postgresql"
          set -e
          homedir=$(pwd)
          cd "$homedir/tests/$dir"
          echo "Running tests in $dir"
          bash "./run_full_test.sh"
          if [ "$MODE" = "exit" ] && [ $? -ne 0 ]; then
            echo "Test failed in $dir, exiting."
            exit 1
          fi
          echo "Test completed in $dir"
          cd $homedir

      - name: Upload test results from PostgreSQL tests
        if: contains(github.event.head_commit.message, '[postgresql]') || contains(github.event.head_commit.message, '[all]')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}/${{ env.ARTIFACT_NAME }}
          retention-days: 7
          overwrite: true
          if-no-files-found: warn

      - name: Unset artifact environment variables after PostgreSQL tests
        if: contains(github.event.head_commit.message, '[postgresql]') || contains(github.event.head_commit.message, '[all]')
        run: |
          unset ARTIFACT_NAME
          unset ARTIFACT_PATH
      - name: Run Sybase ASE tests
        if: contains(github.event.head_commit.message, '[sybase_ase]') || contains(github.event.head_commit.message, '[all]')
        run: |
          dir="sybase_ase"
          set -e
          homedir=$(pwd)
          cd "$homedir/tests/$dir"
          echo "Running tests in $dir"
          bash "./run_full_test.sh"
          if [ "$MODE" = "exit" ] && [ $? -ne 0 ]; then
            echo "Test failed in $dir, exiting."
            exit 1
          fi
          echo "Test completed in $dir"
          cd $homedir

      - name: Upload test results from Sybase ASE tests
        if: contains(github.event.head_commit.message, '[sybase_ase]') || contains(github.event.head_commit.message, '[all]')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}/${{ env.ARTIFACT_NAME }}
          retention-days: 7
          overwrite: true
          if-no-files-found: warn

      - name: Unset artifact environment variables after Sybase ASE tests
        if: contains(github.event.head_commit.message, '[sybase_ase]') || contains(github.event.head_commit.message, '[all]')
        run: |
          unset ARTIFACT_NAME
          unset ARTIFACT_PATH
